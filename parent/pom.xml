<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>
    <name>Zeebe Parent</name>
    <artifactId>zeebe-parent</artifactId>
    <version>0.20.0-SNAPSHOT</version>
    <packaging>pom</packaging>
    <inceptionYear>2017</inceptionYear>
    <url>http://zeebe.io/</url>

    <parent>
        <groupId>io.zeebe</groupId>
        <artifactId>zeebe-bom</artifactId>
        <version>0.20.0-SNAPSHOT</version>
        <relativePath>../bom</relativePath>
    </parent>

    <properties>
        <project.build.sourceEncoding>utf-8</project.build.sourceEncoding>
        <license.header>com/mycila/maven/plugin/license/templates/APACHE-2.txt</license.header>
        <!-- disable jdk8 javadoc checks on release build -->
        <additionalparam>-Xdoclint:none</additionalparam>
        <checkstyle.config.location>.checkstyle.xml</checkstyle.config.location>
        <spotbugs.include>spotbugs/spotbugs-include.xml</spotbugs.include>

        <!-- EXTERNAL LIBS -->
        <version.agrona>1.0.3</version.agrona>
        <version.animal-sniffer>1.18</version.animal-sniffer>
        <version.assertj>3.12.2</version.assertj>
        <version.camunda>7.10.0</version.camunda>
        <version.commons-lang>3.9</version.commons-lang>
        <version.commons-logging>1.2</version.commons-logging>
        <version.commons-math>3.6.1</version.commons-math>
        <version.commons-codec>1.12</version.commons-codec>
        <version.elasticsearch>6.8.1</version.elasticsearch>
        <version.embedded-elasticsearch>2.10.0</version.embedded-elasticsearch>
        <version.error-prone>2.3.3</version.error-prone>
        <version.grpc>1.22.1</version.grpc>
        <version.gson>2.8.5</version.gson>
        <version.guava>28.0-jre</version.guava>
        <version.hamcrest>2.1</version.hamcrest>
        <version.hppc>0.8.1</version.hppc>
        <version.httpasyncclient>4.1.4</version.httpasyncclient>
        <version.httpclient>4.5.9</version.httpclient>
        <version.httpcomponents>4.4.11</version.httpcomponents>
        <version.jackson>2.9.9</version.jackson>
        <version.java-grpc-prometheus>0.3.0</version.java-grpc-prometheus>
        <version.junit>4.12</version.junit>
        <version.log4j>2.12.0</version.log4j>
        <version.mockito>3.0.0</version.mockito>
        <version.model>7.7.0</version.model>
        <version.msgpack>0.8.16</version.msgpack>
        <version.netty>4.1.37.Final</version.netty>
        <version.objenesis>3.0.1</version.objenesis>
        <version.prometheus>0.6.0</version.prometheus>
        <version.protobuf>3.9.0</version.protobuf>
        <version.rocksdbjni>6.0.1</version.rocksdbjni>
        <version.sbe>1.12.8</version.sbe>
        <version.scala-parser>1.1.2</version.scala-parser>
        <version.scala>2.13.0</version.scala>
        <version.slf4j>1.7.26</version.slf4j>
        <version.snakeyaml>1.24</version.snakeyaml>
        <version.streamex>0.6.8</version.streamex>
        <version.toml>0.7.2</version.toml>

        <!-- maven plugins -->
        <plugin.version.antrun>1.8</plugin.version.antrun>
        <plugin.version.appassembler>2.1.0</plugin.version.appassembler>
        <plugin.version.build-helper>3.0.0</plugin.version.build-helper>
        <plugin.version.checkstyle>3.1.0</plugin.version.checkstyle>
        <plugin.version.compiler>3.8.1</plugin.version.compiler>
        <plugin.version.exec>1.6.0</plugin.version.exec>
        <plugin.version.failsafe>3.0.0-M3</plugin.version.failsafe>
        <plugin.version.fmt>2.9</plugin.version.fmt>
        <plugin.version.license>3.0</plugin.version.license>
        <plugin.version.protobuf-maven-plugin>0.6.1</plugin.version.protobuf-maven-plugin>
        <plugin.version.proto-backwards-compatibility>1.0.3</plugin.version.proto-backwards-compatibility>
        <plugin.version.replacer>1.5.3</plugin.version.replacer>
        <plugin.version.resources>3.1.0</plugin.version.resources>
        <plugin.version.scala>4.1.0</plugin.version.scala>
        <plugin.version.shade>3.2.1</plugin.version.shade>
        <plugin.version.surefire>3.0.0-M3</plugin.version.surefire>
        <plugin.version.versions>2.7</plugin.version.versions>
        <plugin.version.enforcer>3.0.0-M2</plugin.version.enforcer>
        <plugin.version.dependency>3.1.1</plugin.version.dependency>
        <plugin.version.spotbugs>3.1.12</plugin.version.spotbugs>

        <!-- maven extensions -->
        <extension.version.os-maven-plugin>1.6.2</extension.version.os-maven-plugin>
    </properties>

    <dependencyManagement>
        <dependencies>
            <dependency>
                <groupId>io.zeebe</groupId>
                <artifactId>zeebe-broker-core</artifactId>
                <version>${project.version}</version>
                <classifier>tests</classifier>
                <type>test-jar</type>
            </dependency>

            <dependency>
                <groupId>io.zeebe</groupId>
                <artifactId>zeebe-workflow-engine</artifactId>
                <version>${project.version}</version>
                <classifier>tests</classifier>
                <type>test-jar</type>
            </dependency>

            <dependency>
                <groupId>io.zeebe</groupId>
                <artifactId>zeebe-logstreams</artifactId>
                <version>${project.version}</version>
                <classifier>tests</classifier>
                <type>test-jar</type>
            </dependency>

            <dependency>
                <groupId>org.agrona</groupId>
                <artifactId>agrona</artifactId>
                <version>${version.agrona}</version>
            </dependency>

            <dependency>
                <groupId>com.fasterxml.jackson</groupId>
                <artifactId>jackson-bom</artifactId>
                <version>${version.jackson}</version>
                <scope>import</scope>
                <type>pom</type>
            </dependency>

            <dependency>
                <groupId>org.msgpack</groupId>
                <artifactId>msgpack-core</artifactId>
                <version>${version.msgpack}</version>
            </dependency>

            <dependency>
                <groupId>org.msgpack</groupId>
                <artifactId>jackson-dataformat-msgpack</artifactId>
                <version>${version.msgpack}</version>
            </dependency>

            <dependency>
                <groupId>junit</groupId>
                <artifactId>junit</artifactId>
                <version>${version.junit}</version>
            </dependency>

            <dependency>
                <groupId>org.mockito</groupId>
                <artifactId>mockito-core</artifactId>
                <version>${version.mockito}</version>
            </dependency>

            <dependency>
                <groupId>org.assertj</groupId>
                <artifactId>assertj-core</artifactId>
                <version>${version.assertj}</version>
            </dependency>

            <dependency>
                <groupId>com.moandjiezana.toml</groupId>
                <artifactId>toml4j</artifactId>
                <version>${version.toml}</version>
            </dependency>

            <dependency>
                <groupId>uk.co.real-logic</groupId>
                <artifactId>sbe-tool</artifactId>
                <version>${version.sbe}</version>
            </dependency>

            <dependency>
                <groupId>org.slf4j</groupId>
                <artifactId>slf4j-api</artifactId>
                <version>${version.slf4j}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-api</artifactId>
                <version>${version.log4j}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-slf4j-impl</artifactId>
                <version>${version.log4j}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.logging.log4j</groupId>
                <artifactId>log4j-core</artifactId>
                <version>${version.log4j}</version>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest</artifactId>
                <version>${version.hamcrest}</version>
            </dependency>

            <dependency>
                <groupId>org.hamcrest</groupId>
                <artifactId>hamcrest-core</artifactId>
                <version>${version.hamcrest}</version>
            </dependency>

            <dependency>
                <groupId>org.scala-lang</groupId>
                <artifactId>scala-library</artifactId>
                <version>${version.scala}</version>
            </dependency>

            <dependency>
                <groupId>org.scala-lang.modules</groupId>
                <artifactId>scala-parser-combinators_2.13</artifactId>
                <version>${version.scala-parser}</version>
            </dependency>

            <dependency>
                <groupId>org.camunda.bpm.model</groupId>
                <artifactId>camunda-xml-model</artifactId>
                <version>${version.camunda}</version>
            </dependency>

            <dependency>
                <groupId>org.rocksdb</groupId>
                <artifactId>rocksdbjni</artifactId>
                <version>${version.rocksdbjni}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-core</artifactId>
                <version>${version.grpc}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-api</artifactId>
                <version>${version.grpc}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf</artifactId>
                <version>${version.grpc}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-protobuf-lite</artifactId>
                <version>${version.grpc}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-stub</artifactId>
                <version>${version.grpc}</version>
            </dependency>

            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java</artifactId>
                <version>${version.protobuf}</version>
            </dependency>

            <dependency>
                <groupId>com.google.protobuf</groupId>
                <artifactId>protobuf-java-util</artifactId>
                <version>${version.protobuf}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-netty</artifactId>
                <version>${version.grpc}</version>
            </dependency>

            <dependency>
                <groupId>io.grpc</groupId>
                <artifactId>grpc-testing</artifactId>
                <version>${version.grpc}</version>
            </dependency>

            <dependency>
                <groupId>one.util</groupId>
                <artifactId>streamex</artifactId>
                <version>${version.streamex}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch</artifactId>
                <version>${version.elasticsearch}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch</groupId>
                <artifactId>elasticsearch-x-content</artifactId>
                <version>${version.elasticsearch}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-high-level-client</artifactId>
                <version>${version.elasticsearch}</version>
            </dependency>

            <dependency>
                <groupId>org.elasticsearch.client</groupId>
                <artifactId>elasticsearch-rest-client</artifactId>
                <version>${version.elasticsearch}</version>
            </dependency>

            <dependency>
                <groupId>com.google.guava</groupId>
                <artifactId>guava</artifactId>
                <version>${version.guava}</version>
            </dependency>

            <dependency>
                <groupId>com.google.code.gson</groupId>
                <artifactId>gson</artifactId>
                <version>${version.gson}</version>
            </dependency>

            <dependency>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>animal-sniffer-annotations</artifactId>
                <version>${version.animal-sniffer}</version>
            </dependency>

            <dependency>
                <groupId>com.google.errorprone</groupId>
                <artifactId>error_prone_annotations</artifactId>
                <version>${version.error-prone}</version>
            </dependency>

            <dependency>
                <groupId>org.objenesis</groupId>
                <artifactId>objenesis</artifactId>
                <version>${version.objenesis}</version>
            </dependency>

            <dependency>
                <groupId>org.yaml</groupId>
                <artifactId>snakeyaml</artifactId>
                <version>${version.snakeyaml}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-lang3</artifactId>
                <version>${version.commons-lang}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.commons</groupId>
                <artifactId>commons-math3</artifactId>
                <version>${version.commons-math}</version>
            </dependency>

            <dependency>
                <groupId>commons-logging</groupId>
                <artifactId>commons-logging</artifactId>
                <version>${version.commons-logging}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore</artifactId>
                <version>${version.httpcomponents}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpcore-nio</artifactId>
                <version>${version.httpcomponents}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpasyncclient</artifactId>
                <version>${version.httpasyncclient}</version>
            </dependency>

            <dependency>
                <groupId>org.apache.httpcomponents</groupId>
                <artifactId>httpclient</artifactId>
                <version>${version.httpclient}</version>
            </dependency>

            <dependency>
                <groupId>commons-codec</groupId>
                <artifactId>commons-codec</artifactId>
                <version>${version.commons-codec}</version>
            </dependency>

            <dependency>
                <groupId>com.carrotsearch</groupId>
                <artifactId>hppc</artifactId>
                <version>${version.hppc}</version>
            </dependency>

            <dependency>
                <groupId>pl.allegro.tech</groupId>
                <artifactId>embedded-elasticsearch</artifactId>
                <version>${version.embedded-elasticsearch}</version>
            </dependency>

            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient</artifactId>
                <version>${version.prometheus}</version>
            </dependency>

            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_common</artifactId>
                <version>${version.prometheus}</version>
            </dependency>

            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_hotspot</artifactId>
                <version>${version.prometheus}</version>
            </dependency>

            <dependency>
                <groupId>io.prometheus</groupId>
                <artifactId>simpleclient_httpserver</artifactId>
                <version>${version.prometheus}</version>
            </dependency>

            <dependency>
                <groupId>me.dinowernli</groupId>
                <artifactId>java-grpc-prometheus</artifactId>
                <version>${version.java-grpc-prometheus}</version>
                <exclusions>
                    <exclusion>
                        <groupId>io.grpc</groupId>
                        <artifactId>grpc-all</artifactId>
                    </exclusion>
                </exclusions>
            </dependency>

        </dependencies>
    </dependencyManagement>

    <dependencies>
        <dependency>
            <groupId>io.zeebe</groupId>
            <artifactId>zeebe-build-tools</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-core</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-slf4j-impl</artifactId>
            <scope>test</scope>
        </dependency>
    </dependencies>

    <build>
        <pluginManagement>
            <plugins>
                <!-- MAVEN COMPILER -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-compiler-plugin</artifactId>
                    <version>${plugin.version.compiler}</version>
                    <configuration>
                        <source>1.8</source>
                        <target>1.8</target>
                    </configuration>
                </plugin>

                <!-- LICENSE PLUGIN -->
                <plugin>
                    <groupId>com.mycila</groupId>
                    <artifactId>license-maven-plugin</artifactId>
                    <version>${plugin.version.license}</version>
                    <configuration>
                        <header>${license.header}</header>
                        <properties>
                            <owner>camunda services GmbH</owner>
                            <email>info@camunda.com</email>
                        </properties>
                        <includes>
                            <include>**/*.java</include>
                            <include>**/*.scala</include>
                        </includes>
                        <mapping>
                            <java>SLASHSTAR_STYLE</java>
                        </mapping>
                    </configuration>
                    <executions>
                        <execution>
                            <id>add-license</id>
                            <phase>compile</phase>
                            <goals>
                                <goal>format</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <!-- CHECKSTYLE -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-checkstyle-plugin</artifactId>
                    <version>${plugin.version.checkstyle}</version>
                    <!-- dependency on build tool to reference the checkstyle cfg -->
                    <dependencies>
                        <dependency>
                            <groupId>io.zeebe</groupId>
                            <artifactId>zeebe-build-tools</artifactId>
                            <version>${project.version}</version>
                        </dependency>
                    </dependencies>
                    <configuration>
                        <configLocation>check/.checkstyle.xml</configLocation>
                        <includeTestSourceDirectory>true</includeTestSourceDirectory>
                        <encoding>UTF-8</encoding>
                        <failOnViolation>true</failOnViolation>
                        <sourceDirectories>
                            <sourceDirectory>${project.build.sourceDirectory}</sourceDirectory>
                            <sourceDirectory>${project.build.testSourceDirectory}</sourceDirectory>
                        </sourceDirectories>
                    </configuration>
                    <executions>
                        <execution>
                            <id>validate-java</id>
                            <phase>validate</phase>
                            <goals>
                                <goal>check</goal>
                            </goals>
                            <configuration>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <!-- MAVEN SUREFIRE -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-surefire-plugin</artifactId>
                    <version>${plugin.version.surefire}</version>
                    <configuration>
                        <failIfNoTests>false</failIfNoTests>
                        <trimStackTrace>false</trimStackTrace>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                        <properties>
                            <property>
                                <name>listener</name>
                                <value>io.zeebe.ZeebeTestListener</value>
                            </property>
                        </properties>
                    </configuration>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-failsafe-plugin</artifactId>
                    <version>${plugin.version.failsafe}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>integration-test</goal>
                                <goal>verify</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <failIfNoTests>false</failIfNoTests>
                        <trimStackTrace>false</trimStackTrace>
                        <redirectTestOutputToFile>true</redirectTestOutputToFile>
                        <properties>
                            <property>
                                <name>listener</name>
                                <value>io.zeebe.ZeebeTestListener</value>
                            </property>
                        </properties>
                    </configuration>
                </plugin>

                <!-- Build Helper Plugin -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>build-helper-maven-plugin</artifactId>
                    <version>${plugin.version.build-helper}</version>
                </plugin>

                <!-- Shade Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-shade-plugin</artifactId>
                    <version>${plugin.version.shade}</version>
                </plugin>

                <!-- App Assembler Plugin -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>appassembler-maven-plugin</artifactId>
                    <version>${plugin.version.appassembler}</version>
                </plugin>

                <!-- Exec Plugin -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>exec-maven-plugin</artifactId>
                    <version>${plugin.version.exec}</version>
                    <configuration>
                        <!-- Define system properties in one place, see https://github.com/camunda-zeebe/zeebe/issues/377 -->
                        <systemProperties>
                            <systemProperty>
                                <key>sbe.output.dir</key>
                                <value>${project.build.directory}/generated-sources/sbe</value>
                            </systemProperty>
                            <systemProperty>
                                <key>sbe.java.generate.interfaces</key>
                                <value>true</value>
                            </systemProperty>
                            <systemProperty>
                                <key>sbe.decode.unknown.enum.values</key>
                                <value>true</value>
                            </systemProperty>
                        </systemProperties>
                    </configuration>
                </plugin>

                <!-- Resources Plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${plugin.version.resources}</version>
                </plugin>

                <!-- Scala Plugin -->
                <plugin>
                    <groupId>net.alchim31.maven</groupId>
                    <artifactId>scala-maven-plugin</artifactId>
                    <version>${plugin.version.scala}</version>
                    <executions>
                        <execution>
                            <id>scala-compile-first</id>
                            <phase>process-resources</phase>
                            <goals>
                                <goal>add-source</goal>
                                <goal>compile</goal>
                            </goals>
                        </execution>
                        <execution>
                            <id>scala-test-compile</id>
                            <phase>process-test-resources</phase>
                            <goals>
                                <goal>testCompile</goal>
                            </goals>
                        </execution>
                    </executions>
                    <configuration>
                        <scalaVersion>${version.scala}</scalaVersion>
                    </configuration>
                </plugin>

                <!--This plugin's configuration is used to store Eclipse m2e settings
                  only. It has no influence on the Maven build itself. -->
                <plugin>
                    <groupId>org.eclipse.m2e</groupId>
                    <artifactId>lifecycle-mapping</artifactId>
                    <version>1.0.0</version>
                    <configuration>
                        <lifecycleMappingMetadata>
                            <pluginExecutions>
                                <pluginExecution>
                                    <pluginExecutionFilter>
                                        <groupId>org.codehaus.mojo</groupId>
                                        <artifactId>exec-maven-plugin</artifactId>
                                        <versionRange>[1.3.2,)</versionRange>
                                        <goals>
                                            <goal>java</goal>
                                        </goals>
                                    </pluginExecutionFilter>
                                    <action>
                                        <ignore/>
                                    </action>
                                </pluginExecution>
                            </pluginExecutions>
                        </lifecycleMappingMetadata>
                    </configuration>
                </plugin>

                <!-- Ant run plugin -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-antrun-plugin</artifactId>
                    <version>${plugin.version.antrun}</version>
                </plugin>

                <!-- Versions plugin to update versions in pom files -->
                <plugin>
                    <groupId>org.codehaus.mojo</groupId>
                    <artifactId>versions-maven-plugin</artifactId>
                    <version>${plugin.version.versions}</version>
                </plugin>

                <!-- Google code format plugin -->
                <plugin>
                    <groupId>com.coveo</groupId>
                    <artifactId>fmt-maven-plugin</artifactId>
                    <version>${plugin.version.fmt}</version>
                    <executions>
                        <execution>
                            <goals>
                                <goal>format</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.xolstice.maven.plugins</groupId>
                    <artifactId>protobuf-maven-plugin</artifactId>
                    <version>${plugin.version.protobuf-maven-plugin}</version>
                    <configuration>
                        <protocArtifact>
                            com.google.protobuf:protoc:${version.protobuf}:exe:${os.detected.classifier}
                        </protocArtifact>
                        <pluginId>grpc-java</pluginId>
                        <pluginArtifact>
                            io.grpc:protoc-gen-grpc-java:${version.grpc}:exe:${os.detected.classifier}
                        </pluginArtifact>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>compile</goal>
                                <goal>compile-custom</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>com.salesforce.servicelibs</groupId>
                    <artifactId>proto-backwards-compatibility</artifactId>
                    <version>${plugin.version.proto-backwards-compatibility}</version>
                    <configuration>
                        <protoSourceRoot>${project.basedir}/src/main/proto</protoSourceRoot>
                    </configuration>
                    <executions>
                        <execution>
                            <goals>
                                <goal>backwards-compatibility-check</goal>
                            </goals>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>com.google.code.maven-replacer-plugin</groupId>
                    <artifactId>replacer</artifactId>
                    <version>${plugin.version.replacer}</version>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-enforcer-plugin</artifactId>
                    <version>${plugin.version.enforcer}</version>
                    <executions>
                        <execution>
                            <id>enforce-jdk-8</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <requireMavenVersion>
                                        <version>[3.3,)</version>
                                    </requireMavenVersion>
                                    <requireJavaVersion>
                                        <version>[1.8,1.9)</version>
                                    </requireJavaVersion>
                                </rules>
                            </configuration>
                        </execution>
                        <execution>
                            <id>enforce-dependency-convergence</id>
                            <goals>
                                <goal>enforce</goal>
                            </goals>
                            <configuration>
                                <rules>
                                    <dependencyConvergence/>
                                </rules>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-dependency-plugin</artifactId>
                    <version>${plugin.version.dependency}</version>
                    <executions>
                        <execution>
                            <id>analyze-dependencies</id>
                            <goals>
                                <goal>analyze-only</goal>
                            </goals>
                            <configuration>
                                <failOnWarning>true</failOnWarning>
                                <outputXML>true</outputXML>
                                <!-- dependencies not directly used in all projects during tests -->
                                <ignoredUnusedDeclaredDependencies>
                                    <dep>org.apache.logging.log4j:log4j-slf4j-impl</dep>
                                    <dep>org.apache.logging.log4j:log4j-core</dep>
                                    <dep>io.zeebe:zeebe-build-tools</dep>
                                </ignoredUnusedDeclaredDependencies>
                            </configuration>
                        </execution>
                    </executions>
                </plugin>

                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-jar-plugin</artifactId>
                    <version>3.1.2</version>
                    <configuration>
                        <useDefaultManifestFile>false</useDefaultManifestFile>
                    </configuration>
                </plugin>

            </plugins>

        </pluginManagement>

        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.mycila</groupId>
                <artifactId>license-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>com.coveo</groupId>
                <artifactId>fmt-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-enforcer-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>skip-unstable-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <excludedGroups>io.zeebe.UnstableTest</excludedGroups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>skip-unstable-ci</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <excludedGroups>io.zeebe.UnstableCI</excludedGroups>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>parallel-tests</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <forkCount>0.5C</forkCount>
                            <reuseForks>true</reuseForks>
                            <systemPropertyVariables>
                                <!-- use two dollar signs to prevent maven properties resolution, surefire will resolve
                                the property later. If only ${surefire.forkNumber} is used maven will fail to resolve it
                                and don't set the system property -->
                                <testForkNumber>$${surefire.forkNumber}</testForkNumber>
                            </systemPropertyVariables>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>spotbugs</id>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.github.spotbugs</groupId>
                        <artifactId>spotbugs-maven-plugin</artifactId>
                        <version>${plugin.version.spotbugs}</version>
                        <configuration>
                            <effort>Max</effort>
                            <threshold>Low</threshold>
                            <xmlOutput>true</xmlOutput>
                            <includeFilterFile>${spotbugs.include}</includeFilterFile>
                        </configuration>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>check</goal>
                                </goals>
                            </execution>
                        </executions>

                        <!-- dependency on build tool to reference the spotbugs filter-->
                        <dependencies>
                            <dependency>
                                <groupId>io.zeebe</groupId>
                                <artifactId>zeebe-build-tools</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>

            </build>
        </profile>

        <!--
          This profile is used to add an explicit dependency to surefire-junit. To fix the race condition
          of https://github.com/zeebe-io/zeebe/issues/2379 we download all dependencies at the beginning
          with mvn dependency:go-offline and then run the tests in offline mode. But the plugin misses
          to download the surefire-junit dependency, therefore define an explicit dependency while downloading
        -->
        <profile>
            <id>prepare-offline</id>
            <dependencies>
                <dependency>
                    <groupId>org.apache.maven.surefire</groupId>
                    <artifactId>surefire-junit4</artifactId>
                    <version>${plugin.version.surefire}</version>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>org.apache.maven.surefire</groupId>
                    <artifactId>surefire-junit47</artifactId>
                    <version>${plugin.version.surefire}</version>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-dependency-plugin</artifactId>
                        <executions>
                            <execution>
                                <id>analyze-dependencies</id>
                                <goals>
                                    <goal>analyze-only</goal>
                                </goals>
                                <configuration>
                                    <ignoredUnusedDeclaredDependencies combine.children="append">
                                        <dep>org.apache.maven.surefire:surefire-junit4</dep>
                                        <dep>org.apache.maven.surefire:surefire-junit47</dep>
                                    </ignoredUnusedDeclaredDependencies>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
